// DO NOT EDIT THIS FILE - IT WAS AUTOGENERATED BY merge.py FROM rules/*.part
//
//
//  Rules for resolving XKB components for use with XFree86
//  Copyright 1996 by Joseph Moss
//
//  2002 Modifier: Ivan Pascal      The XFree86 Project
//

// If you want non-latin layouts to implicitly include the en_US layout,
// then uncomment the following lines:
//! $nonlatin = af am ara bd bg bt by eg et ge gn gr id il in ir \
//              jp jv kg kh kr kz la lk ma me mk mm mn mv my \
//              pk rs ru sy th tj tz ua uz

// PC models
! $pcmodels = abnt2 jp106 kr106 pc86 pc101 pc102 pc104 pc104alt pc105

// Jolla devices and keyboards
! $jollamodels = jollasbj

// Microsoft models (using MS geometry)
! $msmodels = microsoft microsoft4000 microsoft7000 microsoftpro microsoftprousb microsoftprose microsoftsurface

// TypeMatrix geometries
! $tmgeometries = tm2020 tm2030PS2 tm2030USB tm2030USB-102 tm2030USB-106

// Country files that provide specializations for the OLPC:
! $olpclayouts = af am ara br ca es et fr in it kh kz mn ng np pk ru th tr us

! $applealu = applealu_ansi applealu_iso applealu_jis

! $macvendorlayouts = ch de dk fi fr gb is it latam nl no pt se us

// Macintosh vendor: country-specific variants
! $mac_ch_variants = de fr nodeadkeys
! $mac_de_variants = nodeadkeys Sundeadkeys sundeadkeys
! $mac_dk_variants = macbookpro nodeadkeys
! $mac_pt_variants = nodeadkeys Sundeadkeys sundeadkeys

// The countries that predominantly have AZERTY or QWERTZ layouts:
! $azerty = be fr
! $qwertz = al ch cz de hr hu ro si sk

! $thinkpads = thinkpad thinkpad60 thinkpadz60

! $sun = sun_type6_jp sun_type6_usb sun_type6_euro_usb \
         sun_type6_jp_usb sun_type6_unix_usb sun_type7_jp_usb \
         sun_type7_usb sun_type7_euro_usb sun_type7_unix_usb

! $sun_jp = sun_type6_jp sun_type6_jp_usb sun_type7_jp_usb

// Sun Type_6_7 keyboards with custom layouts
! $sun_custom = ara be br ca ch cz de dk \
                ee es fi fr gb gr it jp \
                kr lt lv nl no pl pt ro \
                ru se sk tr tw ua us

! $sun_var =  sun_type6 sun_type6_suncompat sun_type6_de sun_type6_fr \
              sun_type7 sun_type7_suncompat suncompat basic

! $sun_compat = sun_type6 sun_type6_suncompat sun_type7_suncompat suncompat
// no tweaks needed for evdev

! model		=	keycodes
 $jollamodels	=	evdev+jolla(jolla)
  olpc		=	evdev+olpc(olpc)
  olpcm		=	evdev+olpc(olpcm)
  *		=	evdev

! layout[1]	=	keycodes
  $azerty       =       +aliases(azerty)
  $qwertz       =       +aliases(qwertz)
  *             =       +aliases(qwerty)

! layout	=	keycodes
  $azerty       =       +aliases(azerty)
  $qwertz       =       +aliases(qwertz)
  *             =       +aliases(qwerty)

! option	=	keycodes

! model		layout	=	geometry
  thinkpad	us	=	thinkpad(us)

! model		=	geometry
  microsoftelite	=	microsoft(elite)
 $msmodels	=	microsoft(natural)
  dell101	=	dell(dell101)
  dellm65	=	dell(dellm65)
  latitude	=	dell(latitude)
  flexpro	=	keytronic(FlexPro)
  hp6000	=	hp(omnibook)
  hpmini110	=	hp(mini110)
  hpdv5		=	hp(dv5)
  omnikey101	=	northgate(omnikey101)
  sanwaskbkg3	=	sanwa(sanwaskbkg3)
 $pcmodels	=	pc(%m)
  everex	=	everex(STEPnote)
  thinkpad	=	thinkpad(intl)
  thinkpad60	=	thinkpad(60)
  thinkpadz60	=	thinkpad(60)
  apex300	=	steelseries(apex300)
 $tmgeometries	=	typematrix(%m)
  winbook	=	winbook(XP5)
  pc98		=	nec(pc98)
 $applealu	=	macintosh(%m)
  hhk		=	hhk(basic)
  kinesis	=	kinesis(model100)
  sun_type6_jp          =   sun(type6jp)
  sun_type6_usb         =   sun(type6)
  sun_type6_euro_usb    =   sun(type6tuv)
  sun_type6_jp_usb      =   sun(type6jp)
  sun_type6_unix_usb    =   sun(type6unix)
  sun_type7_jp_usb      =   sun(type6jp)
  sun_type7_usb         =   sun(type7)
  sun_type7_euro_usb    =   sun(type7tuv)
  sun_type7_unix_usb    =   sun(type7unix)
  *		=       pc(pc104)

! model		layout		variant	=	symbols
  *		ben		basic	=	pc+in(ben)
  *		ben		probhat	=	pc+in(ben_probhat)
  *		dev		basic	=	pc+in(deva)
  *		guj		basic	=	pc+in(guj)
  *		gur		basic	=	pc+in(guru)
  *		kan		basic	=	pc+in(kan)
  *		mal		basic	=	pc+in(mal)
  *		mao		basic	=	pc+nz(mao)
  *		ogham		basic	=	pc+ie(ogam)
  *		ogham		is434	=	pc+ie(ogam_is434)
  *		ori		basic	=	pc+in(ori)
  *		syr		basic	=	pc+sy(syc)
  *		syr		phonetic	=	pc+sy(syc_phonetic)
  *		tel		basic	=	pc+in(tel)
  $applealu	ch		$mac_ch_variants	=	macintosh_vndr/apple(alukbd)+macintosh_vndr/%l%(v)
  $applealu	de		$mac_de_variants	=	macintosh_vndr/apple(alukbd)+macintosh_vndr/%l%(v)
  $applealu	dk		$mac_dk_variants	=	macintosh_vndr/apple(alukbd)+macintosh_vndr/%l%(v)
  $applealu	fi		nodeadkeys	=	macintosh_vndr/apple(alukbd)+macintosh_vndr/%l%(v)
  $applealu	is		nodeadkeys	=	macintosh_vndr/apple(alukbd)+macintosh_vndr/%l%(v)
  $applealu	jp		mac	=	macintosh_vndr/apple(alukbd)+macintosh_vndr/%l%(v)
  $applealu	no		nodeadkeys	=	macintosh_vndr/apple(alukbd)+macintosh_vndr/%l%(v)
  $applealu	pt		$mac_pt_variants	=	macintosh_vndr/apple(alukbd)+macintosh_vndr/%l%(v)
  $applealu	se		nodeadkeys	=	macintosh_vndr/apple(alukbd)+macintosh_vndr/%l%(v)
  $applealu	us		applealu_iso	=	macintosh_vndr/apple(alukbd)+macintosh_vndr/%l%(v)
  $applealu	$macvendorlayouts		*	=	macintosh_vndr/apple(alukbd)+%l%(v)
  $sun	$sun_custom		$sun_var	=	pc+sun_vndr/%l%(v)
  $sun	$sun_custom		*	=	pc+%l%(v)

! model		layout			=	symbols
  *		ben			=	pc+in(ben)
  *		dev			=	pc+in(deva)
  *		guj			=	pc+in(guj)
  *		gur			=	pc+in(guru)
  *		kan			=	pc+in(kan)
  *		mal			=	pc+in(mal)
  *		mao			=	pc+nz(mao)
  *		ogham			=	pc+ie(ogam)
  *		ori			=	pc+in(ori)
  *		syr			=	pc+sy(syc)
  *		tel			=	pc+in(tel)
  *		tml			=	pc+in(tam)
  *		us_intl			=	pc+us(alt-intl)
  ataritt	$nonlatin		=	xfree68_vndr/ataritt(us)+%l%(v):2
  ataritt	*			=	xfree68_vndr/ataritt(us)+%l%(v)
  amiga		$nonlatin		=	xfree68_vndr/amiga(usa1)+%l%(v):2
  amiga		*			=	xfree68_vndr/amiga(usa1)+%l%(v)
  empty		*			=	empty(basic)
  *		empty			=	empty(basic)
  jollasbj	$nonlatin		=	jolla_vndr/sbj(common)+us+%l%(v):2
  jollasbj	*			=	jolla_vndr/sbj(common)+%l%(v)
 $sun		$sun_custom		=	pc+sun_vndr/%l
  pc98		jp			=	nec_vndr/jp(pc98)+nec_vndr/jp(jp):2
  pc98		*			=	nec_vndr/jp(pc98)+%l%(v)
  applealu_jis	jp			=	macintosh_vndr/apple(alukbd)+macintosh_vndr/jp(usmac)+macintosh_vndr/jp(mac):2
  applealu_jis	*			=	macintosh_vndr/apple(alukbd)+%l%(v)+macintosh_vndr/jp(mac):2
  applealu_iso	us			=	macintosh_vndr/apple(alukbd)+macintosh_vndr/us(applealu_iso)
 $applealu	$macvendorlayouts	=	macintosh_vndr/apple(alukbd)+macintosh_vndr/%l
 $applealu	*			=	macintosh_vndr/apple(alukbd)+%l%(v)
  olpc		$olpclayouts		=	olpc+%l%(m)
  olpc		*			=	olpc+%l%(v)
  olpcm		$olpclayouts		=	olpc+%l%(m)
  olpcm		*			=	olpc+%l%(v)
 $thinkpads	br			=	pc+br(thinkpad)
  sl-c3x00	*			=	pc+sharp_vndr/sl-c3x00(basic)
  ws003sh	*			=	pc+sharp_vndr/ws003sh(basic)
  ws007sh	*			=	pc+sharp_vndr/ws007sh(basic)
  ws011sh	*			=	pc+sharp_vndr/ws011sh(basic)
  ws020sh	*			=	pc+sharp_vndr/ws020sh(basic)
  *		$nonlatin		=	pc+us+%l%(v):2
  *		*			=	pc+%l%(v)

! model		layout[1]		variant[1]	=	symbols
  *		ben		basic	=	pc+in(ben)
  *		ben		probhat	=	pc+in(ben_probhat)
  *		dev		basic	=	pc+in(deva)
  *		guj		basic	=	pc+in(guj)
  *		gur		basic	=	pc+in(guru)
  *		kan		basic	=	pc+in(kan)
  *		mal		basic	=	pc+in(mal)
  *		mao		basic	=	pc+nz(mao)
  *		ogham		basic	=	pc+ie(ogam)
  *		ogham		is434	=	pc+ie(ogam_is434)
  *		ori		basic	=	pc+in(ori)
  *		syr		basic	=	pc+sy(syc)
  *		syr		phonetic	=	pc+sy(syc_phonetic)
  *		tel		basic	=	pc+in(tel)
  $applealu	ch		$mac_ch_variants	=	macintosh_vndr/apple(alukbd)+macintosh_vndr/%l[1]%(v[1])
  $applealu	de		$mac_de_variants	=	macintosh_vndr/apple(alukbd)+macintosh_vndr/%l[1]%(v[1])
  $applealu	dk		$mac_dk_variants	=	macintosh_vndr/apple(alukbd)+macintosh_vndr/%l[1]%(v[1])
  $applealu	fi		nodeadkeys	=	macintosh_vndr/apple(alukbd)+macintosh_vndr/%l[1]%(v[1])
  $applealu	is		nodeadkeys	=	macintosh_vndr/apple(alukbd)+macintosh_vndr/%l[1]%(v[1])
  $applealu	jp		mac	=	macintosh_vndr/apple(alukbd)+macintosh_vndr/%l[1]%(v[1])
  $applealu	no		nodeadkeys	=	macintosh_vndr/apple(alukbd)+macintosh_vndr/%l[1]%(v[1])
  $applealu	pt		$mac_pt_variants	=	macintosh_vndr/apple(alukbd)+macintosh_vndr/%l[1]%(v[1])
  $applealu	se		nodeadkeys	=	macintosh_vndr/apple(alukbd)+macintosh_vndr/%l[1]%(v[1])
  $applealu	us		applealu_iso	=	macintosh_vndr/apple(alukbd)+macintosh_vndr/%l[1]%(v[1])
  $applealu	$macvendorlayouts		*	=	macintosh_vndr/apple(alukbd)+%l[1]%(v[1])
  $sun	$sun_custom		$sun_var	=	pc+sun_vndr/%l[1]%(v[1])
  $sun	$sun_custom		*	=	pc+%l[1]%(v[1])

! model		layout[1]			=	symbols
  *		ben			=	pc+in(ben)
  *		dev			=	pc+in(deva)
  *		guj			=	pc+in(guj)
  *		gur			=	pc+in(guru)
  *		kan			=	pc+in(kan)
  *		mal			=	pc+in(mal)
  *		mao			=	pc+nz(mao)
  *		ogham			=	pc+ie(ogam)
  *		ori			=	pc+in(ori)
  *		syr			=	pc+sy(syc)
  *		tel			=	pc+in(tel)
  *		tml			=	pc+in(tam)
  *		us_intl			=	pc+us(alt-intl)
  ataritt	*			=	xfree68_vndr/ataritt(us)+%l[1]%(v[1])
  amiga		*			=	xfree68_vndr/amiga(usa1)+%l[1]%(v[1])
  jollasbj	*			=	jolla_vndr/sbj(common)+%l[1]%(v[1])
 $sun		$sun_custom		=	pc+sun_vndr/%l[1]
  applealu_jis	us			=	macintosh_vndr/apple(alukbd)+macintosh_vndr/jp(usmac)
  applealu_iso	us                      =       macintosh_vndr/apple(alukbd)+macintosh_vndr/us(applealu_iso)
 $applealu	$macvendorlayouts	=	macintosh_vndr/apple(alukbd)+macintosh_vndr/%l[1]
 $applealu	*			=	macintosh_vndr/apple(alukbd)+%l[1]%(v[1])
 $thinkpads	br			=	pc+%l[1](thinkpad)
  *		*			=	pc+%l[1]%(v[1])

! model		layout[2]			=	symbols
  *		ben			=	+in(ben):2
  *		dev			=	+in(deva):2
  *		guj			=	+in(guj):2
  *		gur			=	+in(guru):2
  *		kan			=	+in(kan):2
  *		mal			=	+in(mal):2
  *		mao			=	+nz(mao):2
  *		ogham			=	+ie(ogam):2
  *		ori			=	+in(ori):2
  *		syr			=	+sy(syc):2
  *		tel			=	+in(tel):2
  *		tml			=	+in(tam):2
  *		us_intl			=	+us(alt-intl):2
  applealu_iso	us			=	+macintosh_vndr/us(applealu_iso):2
 $applealu	$macvendorlayouts	=	+macintosh_vndr/%l[2]:2
 $sun		$sun_custom	=	+sun_vndr/%l[2]:2
  *		*		=	+%l[2]%(v[2]):2

! model		layout[3]			=	symbols
  *		ben			=	+in(ben):3
  *		dev			=	+in(deva):3
  *		guj			=	+in(guj):3
  *		gur			=	+in(guru):3
  *		kan			=	+in(kan):3
  *		mal			=	+in(mal):3
  *		mao			=	+nz(mao):3
  *		ogham			=	+ie(ogam):3
  *		ori			=	+in(ori):3
  *		syr			=	+sy(syc):3
  *		tel			=	+in(tel):3
  *		tml			=	+in(tam):3
  *		us_intl			=	+us(alt-intl):3
  applealu_iso	us			=	+macintosh_vndr/us(applealu_iso):3
 $applealu	$macvendorlayouts	=	+macintosh_vndr/%l[3]:3
 $sun		$sun_custom	=	+sun_vndr/%l[3]:3
  *		*		=	+%l[3]%(v[3]):3

! model		layout[4]			=	symbols
  *		ben			=	+in(ben):4
  *		dev			=	+in(deva):4
  *		guj			=	+in(guj):4
  *		gur			=	+in(guru):4
  *		kan			=	+in(kan):4
  *		mal			=	+in(mal):4
  *		mao			=	+nz(mao):4
  *		ogham			=	+ie(ogam):4
  *		ori			=	+in(ori):4
  *		syr			=	+sy(syc):4
  *		tel			=	+in(tel):4
  *		tml			=	+in(tam):4
  *		us_intl			=	+us(alt-intl):4
  applealu_iso	us			=	+macintosh_vndr/us(applealu_iso):4
 $applealu	$macvendorlayouts	=	+macintosh_vndr/%l[4]:4
 $sun		$sun_custom	=	+sun_vndr/%l[4]%(v[4]):4
  *		*		=	+%l[4]%(v[4]):4

! model		layout[2]		variant[2]	=	symbols
  *		ben		basic	=	+in(ben):2
  *		ben		probhat	=	+in(ben_probhat):2
  *		dev		basic	=	+in(deva):2
  *		guj		basic	=	+in(guj):2
  *		gur		basic	=	+in(guru):2
  *		kan		basic	=	+in(kan):2
  *		mal		basic	=	+in(mal):2
  *		mao		basic	=	+nz(mao):2
  *		ogham		basic	=	+ie(ogam):2
  *		ogham		is434	=	+ie(ogam_is434):2
  *		ori		basic	=	+in(ori):2
  *		syr		basic	=	+sy(syc):2
  *		syr		phonetic	=	+sy(syc_phonetic):2
  *		tel		basic	=	+in(tel):2
  $applealu	ch		$mac_ch_variants	=	+macintosh_vndr/%l[2]%(v[2]):2
  $applealu	de		$mac_de_variants	=	+macintosh_vndr/%l[2]%(v[2]):2
  $applealu	dk		$mac_dk_variants	=	+macintosh_vndr/%l[2]%(v[2]):2
  $applealu	fi		nodeadkeys	=	+macintosh_vndr/%l[2]%(v[2]):2
  $applealu	is		nodeadkeys	=	+macintosh_vndr/%l[2]%(v[2]):2
  $applealu	jp		mac	=	+macintosh_vndr/%l[2]%(v[2]):2
  $applealu	no		nodeadkeys	=	+macintosh_vndr/%l[2]%(v[2]):2
  $applealu	pt		$mac_pt_variants	=	+macintosh_vndr/%l[2]%(v[2]):2
  $applealu	se		nodeadkeys	=	+macintosh_vndr/%l[2]%(v[2]):2
  $applealu	us		applealu_iso	=	+macintosh_vndr/%l[2]%(v[2]):2
  $applealu	$macvendorlayouts		*	=	+%l[2]%(v[2]):2
  $sun	$sun_custom		$sun_var	=	+sun_vndr/%l[2]%(v[2]):2
  $sun	$sun_custom		*	=	+%l[2]%(v[2]):2

! model		layout[3]		variant[3]	=	symbols
  *		ben		basic	=	+in(ben):3
  *		ben		probhat	=	+in(ben_probhat):3
  *		dev		basic	=	+in(deva):3
  *		guj		basic	=	+in(guj):3
  *		gur		basic	=	+in(guru):3
  *		kan		basic	=	+in(kan):3
  *		mal		basic	=	+in(mal):3
  *		mao		basic	=	+nz(mao):3
  *		ogham		basic	=	+ie(ogam):3
  *		ogham		is434	=	+ie(ogam_is434):3
  *		ori		basic	=	+in(ori):3
  *		syr		basic	=	+sy(syc):3
  *		syr		phonetic	=	+sy(syc_phonetic):3
  *		tel		basic	=	+in(tel):3
  $applealu	ch		$mac_ch_variants	=	+macintosh_vndr/%l[3]%(v[3]):3
  $applealu	de		$mac_de_variants	=	+macintosh_vndr/%l[3]%(v[3]):3
  $applealu	dk		$mac_dk_variants	=	+macintosh_vndr/%l[3]%(v[3]):3
  $applealu	fi		nodeadkeys	=	+macintosh_vndr/%l[3]%(v[3]):3
  $applealu	is		nodeadkeys	=	+macintosh_vndr/%l[3]%(v[3]):3
  $applealu	jp		mac	=	+macintosh_vndr/%l[3]%(v[3]):3
  $applealu	no		nodeadkeys	=	+macintosh_vndr/%l[3]%(v[3]):3
  $applealu	pt		$mac_pt_variants	=	+macintosh_vndr/%l[3]%(v[3]):3
  $applealu	se		nodeadkeys	=	+macintosh_vndr/%l[3]%(v[3]):3
  $applealu	us		applealu_iso	=	+macintosh_vndr/%l[3]%(v[3]):3
  $applealu	$macvendorlayouts		*	=	+%l[3]%(v[3]):3
  $sun	$sun_custom		$sun_var	=	+sun_vndr/%l[3]%(v[3]):3
  $sun	$sun_custom		*	=	+%l[3]%(v[3]):3

! model		layout[4]		variant[4]	=	symbols
  *		ben		basic	=	+in(ben):4
  *		ben		probhat	=	+in(ben_probhat):4
  *		dev		basic	=	+in(deva):4
  *		guj		basic	=	+in(guj):4
  *		gur		basic	=	+in(guru):4
  *		kan		basic	=	+in(kan):4
  *		mal		basic	=	+in(mal):4
  *		mao		basic	=	+nz(mao):4
  *		ogham		basic	=	+ie(ogam):4
  *		ogham		is434	=	+ie(ogam_is434):4
  *		ori		basic	=	+in(ori):4
  *		syr		basic	=	+sy(syc):4
  *		syr		phonetic	=	+sy(syc_phonetic):4
  *		tel		basic	=	+in(tel):4
  $applealu	ch		$mac_ch_variants	=	+macintosh_vndr/%l[4]%(v[4]):4
  $applealu	de		$mac_de_variants	=	+macintosh_vndr/%l[4]%(v[4]):4
  $applealu	dk		$mac_dk_variants	=	+macintosh_vndr/%l[4]%(v[4]):4
  $applealu	fi		nodeadkeys	=	+macintosh_vndr/%l[4]%(v[4]):4
  $applealu	is		nodeadkeys	=	+macintosh_vndr/%l[4]%(v[4]):4
  $applealu	jp		mac	=	+macintosh_vndr/%l[4]%(v[4]):4
  $applealu	no		nodeadkeys	=	+macintosh_vndr/%l[4]%(v[4]):4
  $applealu	pt		$mac_pt_variants	=	+macintosh_vndr/%l[4]%(v[4]):4
  $applealu	se		nodeadkeys	=	+macintosh_vndr/%l[4]%(v[4]):4
  $applealu	us		applealu_iso	=	+macintosh_vndr/%l[4]%(v[4]):4
  $applealu	$macvendorlayouts		*	=	+%l[4]%(v[4]):4
  $sun	$sun_custom		$sun_var	=	+sun_vndr/%l[4]%(v[4]):4
  $sun	$sun_custom		*	=	+%l[4]%(v[4]):4

! model		=	symbols
  chromebook    =   +inet(evdev)+inet(chromebook)
  ppkb          =   +inet(evdev)+inet(ppkb)
  *             =   +inet(evdev)

! layout	 variant		= compat
  de		 neo			= +caps(caps_lock)+misc(assign_shift_left_action)+level5(level5_lock)
  de		 adnw			= +caps(caps_lock)+misc(assign_shift_left_action)+level5(level5_lock)
  de		 koy			= +caps(caps_lock)+misc(assign_shift_left_action)+level5(level5_lock)
  de		 bone			= +caps(caps_lock)+misc(assign_shift_left_action)+level5(level5_lock)
  de		 bone_eszett_home	= +caps(caps_lock)+misc(assign_shift_left_action)+level5(level5_lock)
  de		 neo_qwertz		= +caps(caps_lock)+misc(assign_shift_left_action)+level5(level5_lock)
  de		 neo_qwerty		= +caps(caps_lock)+misc(assign_shift_left_action)+level5(level5_lock)
  jp		$sun_compat		= complete+japan(kana_lock)

! layout[1]	 variant[1]		= compat
  de		 neo			= +caps(caps_lock)+misc(assign_shift_left_action)+level5(level5_lock)
  de		 adnw			= +caps(caps_lock)+misc(assign_shift_left_action)+level5(level5_lock)
  de		 koy			= +caps(caps_lock)+misc(assign_shift_left_action)+level5(level5_lock)
  de		 bone			= +caps(caps_lock)+misc(assign_shift_left_action)+level5(level5_lock)
  de		 bone_eszett_home	= +caps(caps_lock)+misc(assign_shift_left_action)+level5(level5_lock)
  de		 neo_qwertz		= +caps(caps_lock)+misc(assign_shift_left_action)+level5(level5_lock)
  de		 neo_qwerty		= +caps(caps_lock)+misc(assign_shift_left_action)+level5(level5_lock)
  jp		$sun_compat		= complete+japan(kana_lock)

! layout[2]	 variant[2]		= compat
  de		 neo			= +caps(caps_lock):2+misc(assign_shift_left_action):2+level5(level5_lock):2
  de		 adnw			= +caps(caps_lock):2+misc(assign_shift_left_action):2+level5(level5_lock):2
  de		 koy			= +caps(caps_lock):2+misc(assign_shift_left_action):2+level5(level5_lock):2
  de		 bone			= +caps(caps_lock):2+misc(assign_shift_left_action):2+level5(level5_lock):2
  de		 bone_eszett_home	= +caps(caps_lock):2+misc(assign_shift_left_action):2+level5(level5_lock):2
  de		 neo_qwertz		= +caps(caps_lock):2+misc(assign_shift_left_action):2+level5(level5_lock):2
  de		 neo_qwerty		= +caps(caps_lock):2+misc(assign_shift_left_action):2+level5(level5_lock):2
  jp		$sun_compat		= +japan(kana_lock):2

! layout[3]	 variant[3]		= compat
  de		 neo			= +caps(caps_lock):3+misc(assign_shift_left_action):3+level5(level5_lock):3
  de		 adnw			= +caps(caps_lock):3+misc(assign_shift_left_action):3+level5(level5_lock):3
  de		 koy			= +caps(caps_lock):3+misc(assign_shift_left_action):3+level5(level5_lock):3
  de		 bone			= +caps(caps_lock):3+misc(assign_shift_left_action):3+level5(level5_lock):3
  de		 bone_eszett_home	= +caps(caps_lock):3+misc(assign_shift_left_action):3+level5(level5_lock):3
  de		 neo_qwertz		= +caps(caps_lock):3+misc(assign_shift_left_action):3+level5(level5_lock):3
  de		 neo_qwerty		= +caps(caps_lock):3+misc(assign_shift_left_action):3+level5(level5_lock):3
  jp		$sun_compat		= +japan(kana_lock):3

! layout[4]	 variant[4]		= compat
  de		 neo			= +caps(caps_lock):4+misc(assign_shift_left_action):4+level5(level5_lock):4
  de		 adnw			= +caps(caps_lock):4+misc(assign_shift_left_action):4+level5(level5_lock):4
  de		 koy			= +caps(caps_lock):4+misc(assign_shift_left_action):4+level5(level5_lock):4
  de		 bone			= +caps(caps_lock):4+misc(assign_shift_left_action):4+level5(level5_lock):4
  de		 bone_eszett_home	= +caps(caps_lock):4+misc(assign_shift_left_action):4+level5(level5_lock):4
  de		 neo_qwertz		= +caps(caps_lock):4+misc(assign_shift_left_action):4+level5(level5_lock):4
  de		 neo_qwerty		= +caps(caps_lock):4+misc(assign_shift_left_action):4+level5(level5_lock):4
  jp		$sun_compat		= +japan(kana_lock):4

! model		layout		=	compat
  pc98		jp		=	pc98(basic)
  *		jp		=	complete+japan
  olpc          *               =       olpc
  olpcm         *               =       olpc
  *		*		=	complete

! model		layout[1]	=	compat
  *		jp		=	complete+japan
  *		*		=	complete

! model		layout[2]	=	compat
  *		jp		=	+japan

! model		layout[3]	=	compat
  *		jp		=	+japan

! model		layout[4]	=	compat
  *		jp		=	+japan

! model		=	types
  $applealu	=	complete+numpad(mac)
  *		=	complete

! layout	option					= symbols
  *		misc:apl				= +apl(level3)
  *		misc:typo				= +typo(base)
  *		lv3:ralt_alt				= +level3(ralt_alt)
  *		grp:toggle				= +group(toggle)
  *		grp:alts_toggle				= +group(alts_toggle)
  *		grp:alt_altgr_toggle			= +group(alt_altgr_toggle)
  *		grp:alt_space_toggle			= +group(alt_space_toggle)
  *		grp:win_space_toggle			= +group(win_space_toggle)
  *		grp:ctrl_space_toggle			= +group(ctrl_space_toggle)
  *		grp:rctrl_rshift_toggle			= +group(rctrl_rshift_toggle)
  *		grp:shifts_toggle			= +group(shifts_toggle)
  $azerty	caps:digits_row				= +capslock(digits_row)
  $azerty	caps:digits_row_independent_lock	= +capslock(digits_row_independent_lock)

! layout[1]	option					= symbols
  *		misc:apl				= +apl(level3):1
  *		misc:typo				= +typo(base):1
  *		lv3:ralt_alt				= +level3(ralt_alt):1
  *		grp:toggle				= +group(toggle):1
  *		grp:alts_toggle				= +group(alts_toggle):1
  *		grp:alt_altgr_toggle			= +group(alt_altgr_toggle):1
  *		grp:alt_space_toggle			= +group(alt_space_toggle):1
  *		grp:win_space_toggle			= +group(win_space_toggle):1
  *		grp:ctrl_space_toggle			= +group(ctrl_space_toggle):1
  *		grp:rctrl_rshift_toggle			= +group(rctrl_rshift_toggle):1
  *		grp:shifts_toggle			= +group(shifts_toggle):1
  $azerty	caps:digits_row				= +capslock(digits_row):1
  $azerty	caps:digits_row_independent_lock	= +capslock(digits_row_independent_lock):1

! layout[2]	option					= symbols
  *		misc:apl				= +apl(level3):2
  *		misc:typo				= +typo(base):2
  *		lv3:ralt_alt				= +level3(ralt_alt):2
  *		grp:toggle				= +group(toggle):2
  *		grp:alts_toggle				= +group(alts_toggle):2
  *		grp:alt_altgr_toggle			= +group(alt_altgr_toggle):2
  *		grp:alt_space_toggle			= +group(alt_space_toggle):2
  *		grp:win_space_toggle			= +group(win_space_toggle):2
  *		grp:ctrl_space_toggle			= +group(ctrl_space_toggle):2
  *		grp:rctrl_rshift_toggle			= +group(rctrl_rshift_toggle):2
  *		grp:shifts_toggle			= +group(shifts_toggle):2
  $azerty	caps:digits_row				= +capslock(digits_row):2
  $azerty	caps:digits_row_independent_lock	= +capslock(digits_row_independent_lock):2

! layout[3]	option					= symbols
  *		misc:apl				= +apl(level3):3
  *		misc:typo				= +typo(base):3
  *		lv3:ralt_alt				= +level3(ralt_alt):3
  *		grp:toggle				= +group(toggle):3
  *		grp:alts_toggle				= +group(alts_toggle):3
  *		grp:alt_altgr_toggle			= +group(alt_altgr_toggle):3
  *		grp:alt_space_toggle			= +group(alt_space_toggle):3
  *		grp:win_space_toggle			= +group(win_space_toggle):3
  *		grp:ctrl_space_toggle			= +group(ctrl_space_toggle):3
  *		grp:rctrl_rshift_toggle			= +group(rctrl_rshift_toggle):3
  *		grp:shifts_toggle			= +group(shifts_toggle):3
  $azerty	caps:digits_row				= +capslock(digits_row):3
  $azerty	caps:digits_row_independent_lock	= +capslock(digits_row_independent_lock):3

! layout[4]	option					= symbols
  *		misc:apl				= +apl(level3):4
  *		misc:typo				= +typo(base):4
  *		lv3:ralt_alt				= +level3(ralt_alt):4
  *		grp:toggle				= +group(toggle):4
  *		grp:alts_toggle				= +group(alts_toggle):4
  *		grp:alt_altgr_toggle			= +group(alt_altgr_toggle):4
  *		grp:alt_space_toggle			= +group(alt_space_toggle):4
  *		grp:win_space_toggle			= +group(win_space_toggle):4
  *		grp:ctrl_space_toggle			= +group(ctrl_space_toggle):4
  *		grp:rctrl_rshift_toggle			= +group(rctrl_rshift_toggle):4
  *		grp:shifts_toggle			= +group(shifts_toggle):4
  $azerty	caps:digits_row				= +capslock(digits_row):4
  $azerty	caps:digits_row_independent_lock	= +capslock(digits_row_independent_lock):4

! option                         = symbols
  grp:shift_caps_switch          = +group(caps_select)
  grp:win_menu_switch            = +group(win_menu_select)
  grp:lctrl_rctrl_switch         = +group(ctrl_select)
//  Delete the above three aliases in July 2027.
  ctrl:swapcaps_hyper            = +ctrl(hyper_capscontrol)
  ctrl:swapcaps_and_switch_layout = +ctrl(swapcaps)+group(lctrl_toggle)
//  Delete the above two aliases in September 2027.
  altwin:alt_super_win           = +altwin(alt_super_win)
  altwin:alt_win                 = +altwin(alt_win)
  altwin:ctrl_alt_win            = +altwin(ctrl_alt_win)
  altwin:ctrl_rwin               = +altwin(ctrl_rwin)
  altwin:ctrl_win                = +altwin(ctrl_win)
  altwin:hyper_win               = +altwin(hyper_win)
  altwin:left_meta_win           = +altwin(left_meta_win)
  altwin:menu                    = +altwin(menu)
  altwin:menu_win                = +altwin(menu_win)
  altwin:meta_alt                = +altwin(meta_alt)
  altwin:meta_win                = +altwin(meta_win)
  altwin:prtsc_rwin              = +altwin(prtsc_rwin)
  altwin:swap_alt_win            = +altwin(swap_alt_win)
  altwin:swap_lalt_lwin          = +altwin(swap_lalt_lwin)
  altwin:swap_ralt_rwin          = +altwin(swap_ralt_rwin)
  apple:alupckeys                = +macintosh_vndr/apple(alupckeys)
  apple:jp_oadg109a              = +macintosh_vndr/apple(jp_oadg109a)
  apple:jp_pc106                 = +macintosh_vndr/apple(jp_pc106)
  caps:backspace                 = +capslock(backspace)
  caps:capslock                  = +capslock(capslock)
  caps:ctrl_modifier             = +capslock(ctrl_modifier)
  caps:ctrl_shifted_capslock     = +capslock(ctrl_shifted_capslock)
  caps:escape                    = +capslock(escape)
  caps:escape_shifted_capslock   = +capslock(escape_shifted_capslock)
  caps:escape_shifted_compose    = +capslock(escape_shifted_compose)
  caps:hyper                     = +capslock(hyper)
  caps:menu                      = +capslock(menu)
  caps:none                      = +capslock(none)
  caps:numlock                   = +capslock(numlock)
  caps:return                    = +capslock(return)
  caps:shiftlock                 = +capslock(shiftlock)
  caps:super                     = +capslock(super)
  caps:swapescape                = +capslock(swapescape)
  compose:102                    = +compose(102)
  compose:102-altgr              = +compose(102-altgr)
  compose:caps                   = +compose(caps)
  compose:caps-altgr             = +compose(caps-altgr)
  compose:ins                    = +compose(ins)
  compose:lctrl                  = +compose(lctrl)
  compose:lctrl-altgr            = +compose(lctrl-altgr)
  compose:lwin                   = +compose(lwin)
  compose:lwin-altgr             = +compose(lwin-altgr)
  compose:menu                   = +compose(menu)
  compose:menu-altgr             = +compose(menu-altgr)
  compose:paus                   = +compose(paus)
  compose:prsc                   = +compose(prsc)
  compose:ralt                   = +compose(ralt)
  compose:rctrl                  = +compose(rctrl)
  compose:rctrl-altgr            = +compose(rctrl-altgr)
  compose:rwin                   = +compose(rwin)
  compose:rwin-altgr             = +compose(rwin-altgr)
  compose:sclk                   = +compose(sclk)
  ctrl:aa_ctrl                   = +ctrl(aa_ctrl)
  ctrl:ac_ctrl                   = +ctrl(ac_ctrl)
  ctrl:grouptoggle_capscontrol   = +ctrl(grouptoggle_capscontrol)
  ctrl:hyper_capscontrol         = +ctrl(hyper_capscontrol)
  ctrl:lctrl_meta                = +ctrl(lctrl_meta)
  ctrl:menu_rctrl                = +ctrl(menu_rctrl)
  ctrl:nocaps                    = +ctrl(nocaps)
  ctrl:ralt_rctrl                = +ctrl(ralt_rctrl)
  ctrl:rctrl_ralt                = +ctrl(rctrl_ralt)
  ctrl:swap_lalt_lctl            = +ctrl(swap_lalt_lctl)
  ctrl:swap_lalt_lctl_lwin       = +ctrl(swap_lalt_lctl_lwin)
  ctrl:swap_lwin_lctl            = +ctrl(swap_lwin_lctl)
  ctrl:swap_ralt_rctl            = +ctrl(swap_ralt_rctl)
  ctrl:swap_rwin_rctl            = +ctrl(swap_rwin_rctl)
  ctrl:swapcaps                  = +ctrl(swapcaps)
  esperanto:colemak              = +epo(colemak)
  esperanto:dvorak               = +epo(dvorak)
  esperanto:qwerty               = +epo(qwerty)
  eurosign:2                     = +eurosign(2)
  eurosign:4                     = +eurosign(4)
  eurosign:5                     = +eurosign(5)
  eurosign:E                     = +eurosign(E)
  eurosign:e                     = +eurosign(e)
  fkeys:basic_13-24              = +fkeys(basic_13-24)
  grab:debug                     = +grab(debug)
  grp:alt_caps_toggle            = +group(alt_caps_toggle)
  grp:alt_shift_toggle           = +group(alt_shift_toggle)
  grp:alt_shift_toggle_bidir     = +group(alt_shift_toggle_bidir)
  grp:caps_select                = +group(caps_select)
  grp:caps_switch                = +group(caps_switch)
  grp:caps_toggle                = +group(caps_toggle)
  grp:ctrl_alt_toggle            = +group(ctrl_alt_toggle)
  grp:ctrl_alt_toggle_bidir      = +group(ctrl_alt_toggle_bidir)
  grp:ctrl_select                = +group(ctrl_select)
  grp:ctrl_shift_toggle          = +group(ctrl_shift_toggle)
  grp:ctrl_shift_toggle_bidir    = +group(ctrl_shift_toggle_bidir)
  grp:ctrls_toggle               = +group(ctrls_toggle)
  grp:lalt_lshift_toggle         = +group(lalt_lshift_toggle)
  grp:lalt_toggle                = +group(lalt_toggle)
  grp:lctrl_lalt_toggle          = +group(lctrl_lalt_toggle)
  grp:lctrl_lshift_toggle        = +group(lctrl_lshift_toggle)
  grp:lctrl_lwin_rctrl_menu      = +group(lctrl_lwin_rctrl_menu)
  grp:lctrl_lwin_toggle          = +group(lctrl_lwin_toggle)
  grp:lctrl_toggle               = +group(lctrl_toggle)
  grp:lshift_toggle              = +group(lshift_toggle)
  grp:lswitch                    = +group(lswitch)
  grp:lwin_switch                = +group(lwin_switch)
  grp:lwin_toggle                = +group(lwin_toggle)
  grp:menu_switch                = +group(menu_switch)
  grp:menu_toggle                = +group(menu_toggle)
  grp:ralt_rshift_toggle         = +group(ralt_rshift_toggle)
  grp:rctrl_ralt_toggle          = +group(rctrl_ralt_toggle)
  grp:rctrl_switch               = +group(rctrl_switch)
  grp:rctrl_toggle               = +group(rctrl_toggle)
  grp:rshift_toggle              = +group(rshift_toggle)
  grp:rwin_switch                = +group(rwin_switch)
  grp:rwin_toggle                = +group(rwin_toggle)
  grp:sclk_toggle                = +group(sclk_toggle)
  grp:shift_caps_toggle          = +group(shift_caps_toggle)
  grp:switch                     = +group(switch)
  grp:win_menu_select            = +group(win_menu_select)
  grp:win_switch                 = +group(win_switch)
  hyper:mod3                     = +hyper(mod3)
  hyper:mod4                     = +hyper(mod4)
  japan:hztg_escape              = +jp(hztg_escape)
  japan:nicola_f_bs              = +jp(nicola_f_bs)
  keypad:atm                     = +keypad(atm)
  keypad:future                  = +keypad(future)
  keypad:future_wang             = +keypad(future_wang)
  keypad:hex                     = +keypad(hex)
  keypad:legacy                  = +keypad(legacy)
  keypad:legacy_wang             = +keypad(legacy_wang)
  keypad:oss                     = +keypad(oss)
  keypad:oss_wang                = +keypad(oss_wang)
  keypad:pointerkeys             = +keypad(pointerkeys)
  korean:ralt_hangul             = +kr(ralt_hangul)
  korean:ralt_hanja              = +kr(ralt_hanja)
  korean:rctrl_hangul            = +kr(rctrl_hangul)
  korean:rctrl_hanja             = +kr(rctrl_hanja)
  kpdl:comma                     = +kpdl(comma)
  kpdl:commaoss                  = +kpdl(commaoss)
  kpdl:dot                       = +kpdl(dot)
  kpdl:dotoss                    = +kpdl(dotoss)
  kpdl:dotoss_latin9             = +kpdl(dotoss_latin9)
  kpdl:kposs                     = +kpdl(kposs)
  kpdl:momayyezoss               = +kpdl(momayyezoss)
  kpdl:semi                      = +kpdl(semi)
  lv2:lsgt_switch                = +level2(lsgt_switch)
  lv3:4_switch_isolated          = +level3(4_switch_isolated)
  lv3:9_switch_isolated          = +level3(9_switch_isolated)
  lv3:alt_switch                 = +level3(alt_switch)
  lv3:bksl_switch                = +level3(bksl_switch)
  lv3:bksl_switch_latch          = +level3(bksl_switch_latch)
  lv3:caps_switch                = +level3(caps_switch)
  lv3:caps_switch_capslock_with_ctrl = +level3(caps_switch_capslock_with_ctrl)
  lv3:caps_switch_latch          = +level3(caps_switch_latch)
  lv3:enter_switch               = +level3(enter_switch)
  lv3:lalt_switch                = +level3(lalt_switch)
  lv3:lsgt_switch                = +level3(lsgt_switch)
  lv3:lsgt_switch_latch          = +level3(lsgt_switch_latch)
  lv3:lwin_switch                = +level3(lwin_switch)
  lv3:menu_switch                = +level3(menu_switch)
  lv3:ralt_switch                = +level3(ralt_switch)
  lv3:ralt_switch_multikey       = +level3(ralt_switch_multikey)
  lv3:rwin_switch                = +level3(rwin_switch)
  lv3:switch                     = +level3(switch)
  lv3:win_switch                 = +level3(win_switch)
  lv5:caps_switch                = +level5(caps_switch)
  lv5:lsgt_switch                = +level5(lsgt_switch)
  lv5:lsgt_switch_lock           = +level5(lsgt_switch_lock)
  lv5:lwin_switch_lock           = +level5(lwin_switch_lock)
  lv5:menu_switch                = +level5(menu_switch)
  lv5:ralt_switch                = +level5(ralt_switch)
  lv5:ralt_switch_lock           = +level5(ralt_switch_lock)
  lv5:rctrl_switch               = +level5(rctrl_switch)
  lv5:rwin_switch_lock           = +level5(rwin_switch_lock)
  nbsp:level2                    = +nbsp(level2)
  nbsp:level3                    = +nbsp(level3)
  nbsp:level3n                   = +nbsp(level3n)
  nbsp:level4                    = +nbsp(level4)
  nbsp:level4n                   = +nbsp(level4n)
  nbsp:level4nl                  = +nbsp(level4nl)
  nbsp:none                      = +nbsp(none)
  nbsp:zwnj2                     = +nbsp(zwnj2)
  nbsp:zwnj2nb3                  = +nbsp(zwnj2nb3)
  nbsp:zwnj2nb3nnb4              = +nbsp(zwnj2nb3nnb4)
  nbsp:zwnj2nb3zwj4              = +nbsp(zwnj2nb3zwj4)
  nbsp:zwnj2zwj3                 = +nbsp(zwnj2zwj3)
  nbsp:zwnj2zwj3nb4              = +nbsp(zwnj2zwj3nb4)
  nbsp:zwnj3zwj4                 = +nbsp(zwnj3zwj4)
  parens:swap_brackets           = +parens(swap_brackets)
  rupeesign:4                    = +rupeesign(4)
  scrolllock:mod3                = +scrolllock(mod3)
  shift:both_capslock            = +shift(both_capslock)
  shift:both_capslock_cancel     = +shift(both_capslock_cancel)
  shift:both_shiftlock           = +shift(both_shiftlock)
  shift:breaks_caps              = +shift(breaks_caps)
  solaris:sun_compat             = +sun_vndr/solaris(sun_compat)
  srvrkeys:none                  = +srvrkeys(none)
  terminate:ctrl_alt_bksp        = +terminate(ctrl_alt_bksp)

! option                         = compat
  caps:shiftlock                 = +caps(shiftlock)
  grab:break_actions             = +grab(break_actions)
  grp_led:caps                   = +grp_led(caps)
  grp_led:num                    = +grp_led(num)
  grp_led:scroll                 = +grp_led(scroll)
  japan:kana_lock                = +japan(kana_lock)
  mod_led:compose                = +mod_led(compose)

! option                         = types
  caps:internal                  = +caps(internal)
  caps:internal_nocancel         = +caps(internal_nocancel)
  caps:shift                     = +caps(shift)
  caps:shift_nocancel            = +caps(shift_nocancel)
  numpad:mac                     = +numpad(mac)
  numpad:microsoft               = +numpad(microsoft)
  numpad:pc                      = +numpad(pc)
  numpad:shift3                  = +numpad(shift3)
  custom:types                   = +custom
